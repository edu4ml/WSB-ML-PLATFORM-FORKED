name: Run Tests

on:
  push:
    branches:
      - main

env:
  DJANGO_SETTINGS_MODULE: 'server.settings'
  DEBUG: 1
  DATABASE_PASSWORD: password
  DATABASE_NAME: elearning
  DATABASE_HOST: 0.0.0.0
  DATABASE_USER: postgres
  GAR_URL: http://0.0.0.0:8000

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: ['unit-test', 'e2e-test']
    services:
      postgres: 
        image: postgres:latest
        env:
          POSTGRES_DB: elearning
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          make sync-all-deps

      - name: Run migrations
        run: |
          python manage.py migrate

      - name: Run tests
        if: matrix.type == 'test'
        run: pytest .

      - name: Set up Node.js
        if: matrix.type == 'e2e-test'
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Cache Node.js dependencies
        if: matrix.type == 'e2e-test'
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js dependencies
        if: matrix.type == 'e2e-test'
        run: npm install

      # - name: Start application
      #   if: matrix.type == 'e2e-test'
      #   run: |
      #     make run-for-cypress & sleep 10
      # # Give the server some time to start up

      - name: Cypress run
        if: matrix.type == 'e2e-test'
        uses: cypress-io/github-action@v5.5.1
        with:
          browser: chrome
          build: npm run build
          start: make run-for-cypress
          wait-on: http://0.0.0.0:8000
          wait-on-timeout: 10

  notify:
    needs: [tests]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          MSG_MINIMAL: true
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_TITLE: 'Hello hello! We have CI results for ${{ github.repository }} :tada:'
          SLACK_COLOR: ${{ needs.tests.result }}
          SLACK_LINK_NAMES: true
          SLACK_MESSAGE: |
            *Tests results:*
            - unit-tests : ${{ needs.tests.result }}
            - e2e-tests*: ${{ needs.tests.result }} - OFF 

            *commit*: ${{ github.sha }}
            *branch*: ${{ github.ref }}
